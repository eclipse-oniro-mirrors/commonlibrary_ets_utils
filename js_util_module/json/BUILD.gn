# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_frontend/es2panda/es2abc_config.gni")
import("//build/ohos.gni")
import("//commonlibrary/ets_utils/ets_utils_config.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("//foundation/arkui/ace_engine/build/ace_gen_obj.gni")

# compile .ts to .js.
action("build_ts_js") {
  script = "$util_module/build_ts_js.py"
  outFile_Path = target_out_dir + "/" + current_cpu
  args = [
    "--dst-file",
    rebase_path(target_out_dir + "/json_js.js"),
    "--module-path",
    rebase_path("/commonlibrary/ets_utils/js_util_module/json"),
    "--out-file",
    rebase_path(outFile_Path + "/json_js.js"),
    "--out-filePath",
    rebase_path(outFile_Path),
    "--relative-path",
    rebase_path("//", root_build_dir),
  ]
  outputs = [ target_out_dir + "/json_js.js" ]
}

# compile .js to .abc.
es2abc_gen_abc("gen_json_abc") {
  extra_visibility = [ ":*" ]
  src_js = rebase_path(target_out_dir + "/json_js.js")
  dst_file = rebase_path(target_out_dir + "/json.abc")
  in_puts = [ target_out_dir + "/json_js.js" ]
  out_puts = [ target_out_dir + "/json.abc" ]
  extra_args = [ "--module" ]
  extra_dependencies = [ ":build_ts_js" ]
}

abc_output_path = get_label_info(":json_abc", "target_out_dir")

gen_obj("json_js") {
  input = "$target_out_dir/json_js.js"
  if (use_mac || use_mingw_win || use_ios || use_linux) {
    json_js_obj_path = abc_output_path + "/json.c"
  } else {
    json_js_obj_path = abc_output_path + "/json.o"
  }
  output = json_js_obj_path
  snapshot_dep = [ ":build_ts_js" ]
}

gen_obj("json_abc") {
  input = "$target_out_dir/json.abc"
  if (use_mac || use_mingw_win || use_ios || use_linux) {
    json_js_obj_path = abc_output_path + "/json_abc.c"
  } else {
    json_js_obj_path = abc_output_path + "/json_abc.o"
  }
  output = json_js_obj_path
  snapshot_dep = [ ":gen_json_abc" ]
}

json_sources = [ "native_module_json.cpp" ]

ohos_shared_library("json") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  deps = [ ":json_static" ]
  external_deps = [ "hilog:libhilog" ]
  subsystem_name = "commonlibrary"
  part_name = "ets_utils"
  relative_install_dir = "module/util"
}

ohos_source_set("json_static") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [
    "include",
    "//third_party/icu/icu4c/source/common",
    "//third_party/node/src",
    ets_util_path,
  ]
  configs = [
    "$icu_root:icu_config",
    "$napi_root:ace_napi_config",
  ]
  sources = json_sources

  deps = [
    ":gen_obj_src_json_abc",
    ":gen_obj_src_json_js",
  ]

  if (is_arkui_x) {
    include_dirs += [
      "$plugins_root/hilog/include",
      "$plugins_root/interfaces",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    ]

    if (target_os == "android") {
      defines = [ "ANDROID_PLATFORM" ]
    } else if (target_os == "ios") {
      defines = [ "IOS_PLATFORM" ]
    }
    deps += [
      "$plugins_root/libs/icu:icu_${target_os}",
      "$plugins_root/libs/napi:napi_${target_os}",
      "$plugins_root/libs/securec:sec_${target_os}",
    ]
  } else {
    deps += [ "//third_party/icu/icu4c:shared_icuuc" ]

    external_deps = [
      "bounds_checking_function:libsec_shared",
      "hilog:libhilog",
      "napi:ace_napi",
    ]

    deps += [ "//third_party/icu/icu4c:shared_icuuc" ]
  }
  subsystem_name = "commonlibrary"
  part_name = "ets_utils"
}

group("json_packages") {
  public_deps = [ ":json" ]
}
