/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

The definitions of some interfaces implemented in js_sys_module/console/console.cpp are released under Mozilla license.
The definitions of some interfaces implemented in js_sys_module/timer/timer.cpp are released under Mozilla license.

The definitions and functions of these interfaces are consistent with the standard interfaces under mozilla license,
but the implementation of specific functions is independent and self-developed.

All interfaces are described in d.ts, the following is the interface written in d.ts under to Mozilla license

export declare class console {
    debug(message: string, ...arguments: any[]): void;
    log(message: string, ...arguments: any[]): void;
    info(message: string, ...arguments: any[]): void;
    warn(message: string, ...arguments: any[]): void;
    error(message: string, ...arguments: any[]): void;
    assert(value?: Object, ...arguments: Object[]): void;
    count(label?: string): void;
    countReset(label?: string): void;
    dir(dir?: Object): void;
    dirxml(...arguments: Object[]): void;
    group(...arguments: Object[]): void;
    groupCollapsed(...arguments: Object[]): void;
    groupEnd(): void;
    table(tableData?: Object): void;
    time(label?: string): void;
    timeEnd(label?: string): void;
    timeLog(label?: string, ...arguments: Object[]): void;
    trace(...arguments: Object[]): void;
}

export declare function setInterval(handler: Function | string, delay: number, ...arguments: any[]): number;

export declare function setTimeout(handler: Function | string, delay?: number, ...arguments: any[]): number;

export declare function clearInterval(intervalID?: number): void;

export declare function clearTimeout(timeoutID?: number): void;